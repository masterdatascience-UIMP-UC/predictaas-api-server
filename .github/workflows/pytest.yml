# .github/workflows/app.yaml
name: PyTest
on: push

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Check out repository code
        uses: actions/checkout@v2

      # Setup Python (faster than using Python container)
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"

      - name: Install pipenv
        run: |
          python -m pip install --upgrade pipenv wheel
      - id: cache-pipenv
        uses: actions/cache@v1
        with:
          path: ~/.local/share/virtualenvs
          key: ${{ runner.os }}-pipenv-${{ hashFiles('**/Pipfile.lock') }}

      - name: Install dependencies
        if: steps.cache-pipenv.outputs.cache-hit != 'true'
        run: |
          #python -m pip install --python-version 3.8 -
          pipenv install -r requirements.txt
          pipenv install -r test-requirements.txt
          #pip install -e
          pipenv install --deploy --dev
      - name: Run test suite
        run: |
          #python -m pytest --import-mode=append tests/
          pipenv run test -v

#- name: GitHub Action for pytest
#  uses: cclauss/GitHub-Action-for-pytest@0.5.0

#name: Pytest Passing Tests
#
## Controls when the workflow will run
#on:
#  # Triggers the workflow on push or pull request events but only for the master branch
#  push:
#    branches: [ master ]
#  pull_request:
#    branches: [ master ]
#
#
## A workflow run is made up of one or more jobs that can run sequentially or in parallel
#jobs:
#  # This workflow contains a single job called "build"
#  testeo:
#    runs-on: ubuntu-latest
#
#    # Steps represent a sequence of tasks that will be executed as part of the job
#    steps:
#      - uses: actions/setup-python@v2
#        with:
#          python-version: '3.8'
#      - name: Checkout
#        uses: actions/checkout@v2
#      - name: Pytest Action Step
#        id: pytest
#        uses: paolorechia/fast-pytest-github-action@develop
#        with:
#          pytest_args: '.'
#          requirements_file: 'test-requirements.txt'
#
